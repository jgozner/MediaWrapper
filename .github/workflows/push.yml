on:
  push:
    branches: [ master ]

jobs:

  release: 
    runs-on: ubuntu-18.04
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.201'   

    - name: Install MediaInfo
      run: |
       sudo apt-get install libmms0
       wget https://mediaarea.net/download/binary/libzen0/0.4.38/libzen0v5_0.4.38-1_amd64.xUbuntu_18.04.deb
       sudo dpkg -i *.deb
       sudo rm *.deb
       wget https://mediaarea.net/download/binary/libmediainfo0/20.03/libmediainfo0v5_20.03-1_amd64.xUbuntu_18.04.deb
       sudo dpkg -i *.deb
       sudo rm *.deb
       wget https://mediaarea.net/download/binary/mediainfo/20.03/mediainfo_20.03-1_amd64.xUbuntu_18.04.deb
       sudo dpkg -i *.deb
       sudo rm *.deb

    - name: Install FFmpeg
      run: sudo snap install ffmpeg

    - name: Build and Test
      run: dotnet test --configuration Release  /p:CollectCoverage=true /p:threshold=85 /p:thresholdType=line /p:thresholdStat=total /p:CoverletOutputFormat=lcov

    - name: Send Coveralls info
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        path-to-lcov: "MediaWrapper.Test/coverage.info"  

    - name: Fetch all history for all tags and branches
      run: |
        git fetch --prune --unshallow        

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.3
      with:
          versionSpec: '5.2.x'

    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.3
      id: gitversion 
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml


    - name: Create Nuget Package 
      run: dotnet pack -c Release -p:PackageVersion=${{ steps.gitversion.outputs.majorMinorPatch }} -o .

    - name: Push Nuget Package
      run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
